namespace MSSQL.DIARY.COMN.Constant
{
    public static partial class SqlQueryConstant
    {
        public static readonly string GetdbProperties =
            @"declare @tbl_sp_spaceusedDBs table(		database_name varchar(100) NOT NULL,		database_size varchar(50) NULL,		unallocated varchar(30) NULL,		reserved varchar(20) NULL,		data varchar(20) NULL,		index_size varchar(20) NULL,		unused varchar(20) NULL		)	INSERT INTO @tbl_sp_spaceusedDBs ( database_name, database_size, unallocated, reserved, data, index_size, unused )	EXEC sp_msforeachdb @command1='use ? exec sp_spaceused @oneresultset = 1'  	select @@VERSION as [SQL Server Version], 	CAST(d.compatibility_level as varchar(10)) as'compatibility_level',TRY_CAST(d.is_encrypted as varchar(10)) is_encrypted,TRY_CAST(d.is_sync_with_backup as varchar(10)) as is_sync_with_backup,	COALESCE(CONVERT(VARCHAR(12), (bus.backup_finish_date), 101),'-') AS LastBackUpTime ,	TRY_CAST(d.create_date as varchar(20)) as create_date ,	TRY_CAST(d.user_access_desc as varchar(10)) as user_access_desc, TRY_CAST(dbsp.database_size as varchar(10)) as database_size,	 TRY_CAST(dbsp.unallocated as varchar(10)) as unallocated,TRY_CAST(dbsp.reserved as varchar(10)) as reserved	 ,	TRY_CAST( dbsp.data as varchar(10)) as data,TRY_CAST(dbsp.index_size as varchar(10)) index_size	 ,	 TRY_CAST(dbsp.unused as varchar(10)) unused	from 	master.sys.databases D	LEFT OUTER JOIN msdb.dbo.backupset bus ON bus.database_name = d.name 	INNER JOIN @tbl_sp_spaceusedDBs dbsp On dbsp.database_name=d.name	   where D.NAME  IN ( @DatabaseName)  ";

        public static readonly string GetdbOptions =
            @" SELECT   TRY_CAST(d.compatibility_level as VARCHAR(100) ) as compatibility_level,   TRY_CAST(d.collation_name as VARCHAR(100) ) as collation_name,   TRY_CAST(d.user_access_desc as VARCHAR(100) ) as user_access_desc,   TRY_CAST(d.is_read_only as VARCHAR(100) ) as is_read_only,   TRY_CAST(d.is_auto_close_on as VARCHAR(100) ) as is_auto_close_on,   TRY_CAST(d.is_auto_shrink_on as VARCHAR(100) ) as is_auto_shrink_on,   TRY_CAST(d.state_desc as VARCHAR(100) ) as state,   TRY_CAST(d.is_cleanly_shutdown as VARCHAR(100) ) as is_cleanly_shutdown,   TRY_CAST(d.is_supplemental_logging_enabled as VARCHAR(100) ) as  is_supplemental_logging_enabled,   TRY_CAST(d.snapshot_isolation_state_desc as VARCHAR(100) ) as snapshot_isolation_state_desc,   TRY_CAST(d.is_read_committed_snapshot_on as VARCHAR(100) ) as is_read_committed_snapshot_on,   TRY_CAST(d.recovery_model_desc as VARCHAR(100) ) as recovery_model_desc,   TRY_CAST(d.page_verify_option_desc as VARCHAR(100) ) as page_verify_option_desc,   TRY_CAST(d.service_broker_guid as VARCHAR(100) ) as service_broker_guid FROM   master.sys.databases D WHERE   D.NAME IN    ( @DatabaseName ) ";

        public static readonly string GetdbFiles =
            @"SELECT          MF.NAME                                FileName,        ( CASE type_desc            WHEN 'ROWS' THEN 'DATA'            ELSE type_desc          END )                                FileType,        physical_name                          FileLocation,        MF.size / 128                             CurrentSizeMB,        ( CASE CONVERT(VARCHAR(20), max_size)            WHEN -1 THEN CONVERT(VARCHAR(20), 'Unlimited')            ELSE CONVERT(VARCHAR(20), max_size / 128)          END )                                AS MaxSizeMB,        CONVERT(VARCHAR(20), growth) + ( CASE        CONVERT(VARCHAR(20), is_percent_growth)                                           WHEN 1 THEN CONVERT(VARCHAR(20),                                                       ' Percent')                                           ELSE  CONVERT(VARCHAR(20), ' Pages of 8KB')                                         END ) AS GrowthType 					 					FROM   master.sys.master_files MF,        master.sys.databases D WHERE  MF.database_id = D.database_id        AND D.NAME  IN ( @DatabaseName ) ";
    }
}